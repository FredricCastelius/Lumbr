/* ! Functions - including useful mixins */

// workable elastic variable
$paragraph-spacing: 1.5em; // text indentation value
@function fnGetSpacing($multiple) { // elastic spacing function with em fallback
	@return $paragraph-spacing * $multiple / 100;
}

// breakpoints 
@mixin breakpoint($point) { 
	@if $point == desktop {
		@media (min-width: $desktopWidth) { @content; }
	}
	@else if $point == laptop {
		@media (min-width: $laptopWidth) and (max-width: $desktopWidth - 1px)  { @content; }
	}
	@else if $point == laptopUp {
		@media (min-width: $laptopWidth)  { @content; }
	}
	@else if $point == laptopDown {
		@media (max-width: $laptopWidth - 1px)  { @content; }
	}
	@else if $point == tabletUp {
		@media (min-width: $tabletWidth)  { @content; }
	}
	@else if $point == tabletDekstop {
		@media (min-width: $tabletWidth) and (max-width: $desktopWidth - 1px)  { @content; }
	}
	@else if $point == tablet {
		@media (min-width: $tabletWidth) and (max-width: $laptopWidth - 1px) { @content; }
	}
	@else if $point == phone {
		@media (max-width: $phoneWidth)  { @content; }
	}
}

// center block
@mixin center-block { 
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// absolute position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// fixed position
@mixin fixed-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) { 
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: fixed;
}

// retina images
@mixin image-2x($image, $width, $height) { 
  	@media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    	background-image: url($image);
    	background-size: $width $height;
  	}
}

// opacity
@mixin opacity($opacity) { 
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// text truncate
@mixin text-truncate { 
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}